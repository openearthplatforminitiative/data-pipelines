dagster-user-deployments:
  enabled: true
  deployments:
    - name: "data-pipelines"
      image:
        repository: "ghcr.io/openearthplatforminitiative/data-pipelines"
        tag: latest
        pullPolicy: Always
      dagsterApiGrpcArgs:
        - "--module-name"
        - "data_pipelines"
      port: 3030
      envSecrets:
        - name: "dagster-aws-credentials"
        - name: "dagster-cds-key"
        - name: "dagster-copernicus-credentials"
      envConfigMaps:
        - name: "dagster-config"
      volumes:
        - name: "dagster-work-storage"
          persistentVolumeClaim:
            claimName: "dagster-work-storage-pvc"
        - name: "dagster-result-storage"
          persistentVolumeClaim:
            claimName: "dagster-result-storage-pvc"
      volumeMounts:
        - name: "dagster-work-storage"
          mountPath: "/opt/dagster/storage"
        - name: "dagster-result-storage"
          mountPath: "/opt/dagster/result_storage"
      resources:
        requests:
          ephemeral-storage: 30Gi
        limits:
          ephemeral-storage: 31Gi

dagsterWebserver:
  pathPrefix: "/dagster"
  readinessProbe:
    httpGet:
      path: "/dagster/server_info"
      port: 80
    periodSeconds: 20
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 256Mi
      cpu: 250m

dagsterDaemon:
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 256Mi
      cpu: 250m

  runCoordinator:
    enabled: true
    type: QueuedRunCoordinator
    config:
      queuedRunCoordinator:
        maxConcurrentRuns: 3
        tagConcurrencyLimits:
          - key: "sequential_backfill"
            limit: 1

runLauncher:
  type: K8sRunLauncher
  config:
    k8sRunLauncher:
      runK8sConfig:
        containerConfig:
          resources:
            requests:
              memory: 4048Mi
              cpu: 500m
            limits:
              memory: 4048Mi
              cpu: 500m
        jobSpecConfig:
          ttlSecondsAfterFinished: 7200
      envSecrets:
        - name: "dagster-aws-credentials"
        - name: "dagster-cds-key"
      envConfigMaps:
        - name: "dagster-config"

postgresql:
  # set postgresql.enabled to be false to disable deploy of a PostgreSQL database and use an
  # existing external PostgreSQL database
  enabled: false

generatePostgresqlPasswordSecret: false
