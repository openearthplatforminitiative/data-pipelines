import unittest
from data_pipelines.utils.flood.config import (
    GLOFAS_FLOOD_INTENSITIES,
    GLOFAS_FLOOD_PEAK_TIMINGS,
    GLOFAS_FLOOD_TENDENCIES,
    GLOFAS_PRECISION,
    GLOFAS_RESOLUTION,
    GLOFAS_RET_PRD_THRESH_VALS,
)

from data_pipelines.utils.flood.transforms import (
    compute_flood_tendency,
    compute_flood_intensity,
    compute_flood_peak_timing,
    compute_flood_threshold_percentages,
    add_geometry,
)
from datetime import datetime, date
import dask.dataframe as dd


def lists_to_dict(data_schema: list, data: list):
    """
    Converts a schema and data list into a dictionary mapping each column name to a list of the data it contains.

    Parameters:
        schema (list): List of column names.
        data (list): List of tuples, each tuple containing values corresponding to the columns in the schema.

    Returns:
        dict: A dictionary where each key is a column name and each value is a list of the corresponding values from the data.
    """
    # Create an empty dictionary to store the results
    result_dict = {}

    # Iterate over each column in the schema
    for i, column_name in enumerate(data_schema):
        # Extract the values for the current column from each tuple in the data
        column_values = [row[i] for row in data]

        # Store the values in the result dictionary
        result_dict[column_name] = column_values

    return result_dict


class TestUtilities(unittest.TestCase):
    """
    To run all tests, run the following command from the root directory:
    >>> poetry run pytest
    """

    # @unittest.skip("Skipping test_rounding")
    def test_rounding(self):
        # Test the rounding functionality
        df = dd.from_dict(
            {
                "value": [19.0750000024, 17.324999994],
            },
            npartitions=1,
        )

        df["rounded_value"] = df["value"].round(GLOFAS_PRECISION)
        df = df.compute()
        results = df.to_dict(orient="records")

        # Check the results
        self.assertEqual(results[0]["rounded_value"], 19.075, GLOFAS_PRECISION)
        self.assertEqual(results[1]["rounded_value"], 17.325, GLOFAS_PRECISION)

    # @unittest.skip("Skipping test_dataframe_join")
    def test_dataframe_join(self):
        # Test that joining of several dataframes after performing rounding
        # results in the expected dataframe.
        df1 = dd.from_dict(
            {
                "lat": [19.0750000024],
                "lon": [17.32499999],
                "val1": [5],
            },
            npartitions=1,
        )
        df2 = dd.from_dict(
            {
                "lat": [19.0749999999],
                "lon": [17.325000006],
                "val2": [10],
            },
            npartitions=1,
        )

        # Attempt to join without rounding
        joined_df_without_rounding = df1.merge(
            df2, on=["lat", "lon"], how="inner"
        ).compute()

        # Check that the result is empty, which indicates no matching rows
        self.assertEqual(len(joined_df_without_rounding), 0)

        # make a copy of the dataframe
        df1_rounded = df1.copy()
        df2_rounded = df2.copy()

        df1_rounded["lat"] = df1_rounded["lat"].round(GLOFAS_PRECISION)
        df1_rounded["lon"] = df1_rounded["lon"].round(GLOFAS_PRECISION)
        df2_rounded["lat"] = df2_rounded["lat"].round(GLOFAS_PRECISION)
        df2_rounded["lon"] = df2_rounded["lon"].round(GLOFAS_PRECISION)

        # Join the dataframes after rounding
        joined_df = df1_rounded.merge(
            df2_rounded, on=["lat", "lon"], how="inner"
        ).compute()
        results = joined_df.to_dict(orient="records")

        # Check the results
        self.assertEqual(len(results), 1)
        self.assertEqual(results[0]["lat"], 19.075, GLOFAS_PRECISION)
        self.assertEqual(results[0]["lon"], 17.325, GLOFAS_PRECISION)
        self.assertEqual(results[0]["val1"], 5)
        self.assertEqual(results[0]["val2"], 10)

    # @unittest.skip("Skipping test_compute_flood_tendency")
    def test_compute_flood_tendency(self):
        INCREASING_VAL = GLOFAS_FLOOD_TENDENCIES["increasing"]
        STAGNANT_VAL = GLOFAS_FLOOD_TENDENCIES["stagnant"]
        DECREASING_VAL = GLOFAS_FLOOD_TENDENCIES["decreasing"]
        TENDENCY_COL_NAME = "tendency"

        SCHEMA = [
            "latitude",
            "longitude",
            "control_dis",
            "control_time",
            "control_valid_time",
            "issued_on",
            "valid_for",
            "step",
            "p_above_2y",
            "p_above_5y",
            "p_above_20y",
            "min_dis",
            "q1_dis",
            "median_dis",
            "q3_dis",
            "max_dis",
        ]

        # Create synthetic data for testing
        data = [
            # Data for 'increasing' tendency
            (
                0.0,
                0.5,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.1,
                0.2,
                0.3,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.5,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.1,
                0.2,
                0.3,
                10.0,
                11.0,
                12.5,
                13.0,
                14.0,
            ),
            (
                0.0,
                0.5,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.1,
                0.2,
                0.3,
                10.5,
                11.5,
                15.0,
                16.0,
                17.0,
            ),
            # Data for 'decreasing' tendency
            (
                1.25,
                1.0,
                20.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.1,
                0.2,
                0.3,
                17.0,
                18.0,
                17.5,
                20.0,
                21.0,
            ),
            (
                1.25,
                1.0,
                20.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.1,
                0.2,
                0.3,
                16.0,
                17.0,
                17.8,
                20.0,
                21.5,
            ),
            (
                1.25,
                1.0,
                20.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.1,
                0.2,
                0.3,
                16.5,
                17.5,
                18.0,
                20.5,
                21.5,
            ),
            # Data for 'stagnant' tendency
            (
                2.0,
                2.6,
                25.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.1,
                0.2,
                0.3,
                23.0,
                24.0,
                25.0,
                26.0,
                27.0,
            ),
            (
                2.0,
                2.6,
                25.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.1,
                0.2,
                0.3,
                24.0,
                25.0,
                26.0,
                27.0,
                28.0,
            ),
            (
                2.0,
                2.6,
                25.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.1,
                0.2,
                0.3,
                23.5,
                24.5,
                26.5,
                27.5,
                28.5,
            ),
            # Boundary cases - they should be considered as 'stagnant' based on the conditions provided
            (
                3.0,
                3.1,
                30.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.1,
                0.2,
                0.3,
                29.0,
                29.5,
                33.0,
                34.0,
                35.0,
            ),  # Exactly 1.10 * control_dis
            (
                3.0,
                3.1,
                30.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.1,
                0.2,
                0.3,
                20.0,
                21.5,
                27.001,
                28.0,
                29.0,
            ),  # Exactly > 0.90 * control_dis
        ]

        # Create DataFrame using the synthetic data
        data_as_dict = lists_to_dict(data_schema=SCHEMA, data=data)
        df = dd.from_dict(data_as_dict, npartitions=1)

        # Using the function
        result_df = compute_flood_tendency(
            detailed_forecast_df=df,
            tendencies=GLOFAS_FLOOD_TENDENCIES,
            col_name=TENDENCY_COL_NAME,
        ).compute()

        # Get the tendency values for the synthetic data
        resulting_first_tendency = result_df[
            (result_df["latitude"] == 0.0) & (result_df["longitude"] == 0.5)
        ].to_dict(orient="records")[0][TENDENCY_COL_NAME]
        resulting_second_tendency = result_df[
            (result_df["latitude"] == 1.25) & (result_df["longitude"] == 1.0)
        ].to_dict(orient="records")[0][TENDENCY_COL_NAME]
        resulting_third_tendency = result_df[
            (result_df["latitude"] == 2.0) & (result_df["longitude"] == 2.6)
        ].to_dict(orient="records")[0][TENDENCY_COL_NAME]
        resulting_fourth_tendency = result_df[
            (result_df["latitude"] == 3.0) & (result_df["longitude"] == 3.1)
        ].to_dict(orient="records")[0][TENDENCY_COL_NAME]

        # Assertions to check if the functionality works as expected
        self.assertEqual(resulting_first_tendency, INCREASING_VAL)
        self.assertEqual(resulting_second_tendency, DECREASING_VAL)
        self.assertEqual(resulting_third_tendency, STAGNANT_VAL)
        self.assertEqual(resulting_fourth_tendency, STAGNANT_VAL)

    # @unittest.skip("Skipping test_compute_flood_intensity")
    def test_compute_flood_intensity(self):
        PURPLE = GLOFAS_FLOOD_INTENSITIES["purple"]
        RED = GLOFAS_FLOOD_INTENSITIES["red"]
        YELLOW = GLOFAS_FLOOD_INTENSITIES["yellow"]
        GRAY = GLOFAS_FLOOD_INTENSITIES["gray"]
        INTENSITY_COL_NAME = "intensity"

        SCHEMA = [
            "latitude",
            "longitude",
            "control_dis",
            "control_time",
            "control_valid_time",
            "issued_on",
            "valid_for",
            "step",
            "p_above_2y",
            "p_above_5y",
            "p_above_20y",
            "min_dis",
            "q1_dis",
            "median_dis",
            "q3_dis",
            "max_dis",
        ]

        # Create synthetic data for testing
        data = [
            # Data for 'PURPLE' intensity: max(p_above_20y) >= 0.30
            (
                0.0,
                0.5,
                20.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.55,
                0.45,
                0.3,
                15.0,
                16.0,
                17.0,
                18.0,
                19.0,
            ),
            (
                0.0,
                0.5,
                20.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.15,
                0.25,
                0.25,
                16.0,
                17.0,
                18.0,
                19.0,
                20.0,
            ),
            # Data for 'RED' intensity: max(p_above_5y) >= 0.30 and max(p_above_20y) < 0.30
            (
                1.4,
                1.0,
                25.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.5,
                0.3,
                0.29,
                20.0,
                21.0,
                22.0,
                23.0,
                24.0,
            ),
            (
                1.4,
                1.0,
                25.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.31,
                0.29,
                0.29,
                21.0,
                22.0,
                23.0,
                24.0,
                25.0,
            ),
            # Data for 'YELLOW' intensity: max(p_above_2y) >= 0.30, and others < 0.30
            (
                2.225,
                2.0,
                30.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.30,
                0.29,
                0.29,
                25.0,
                26.0,
                27.0,
                28.0,
                29.0,
            ),
            (
                2.225,
                2.0,
                30.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.29,
                0.28,
                0.18,
                26.0,
                27.0,
                28.0,
                29.0,
                30.0,
            ),
            # Data for 'GREY' intensity: all probabilities < 0.30
            (
                3.0,
                3.925,
                35.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.25,
                0.2,
                0.15,
                30.0,
                31.0,
                32.0,
                33.0,
                34.0,
            ),
            (
                3.0,
                3.925,
                35.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.29,
                0.29,
                0.29,
                31.0,
                32.0,
                33.0,
                34.0,
                35.0,
            ),
        ]

        # Create DataFrame using the synthetic data
        data_as_dict = lists_to_dict(data_schema=SCHEMA, data=data)
        df = dd.from_dict(data_as_dict, npartitions=1)

        # Using the function
        result_df = compute_flood_intensity(
            detailed_forecast_df=df,
            intensities=GLOFAS_FLOOD_INTENSITIES,
            col_name=INTENSITY_COL_NAME,
        ).compute()

        # Get the intensity values for the synthetic data
        resulting_first_intensity = result_df[
            (result_df["latitude"] == 0.0) & (result_df["longitude"] == 0.5)
        ].to_dict(orient="records")[0][INTENSITY_COL_NAME]
        resulting_second_intensity = result_df[
            (result_df["latitude"] == 1.4) & (result_df["longitude"] == 1.0)
        ].to_dict(orient="records")[0][INTENSITY_COL_NAME]
        resulting_third_intensity = result_df[
            (result_df["latitude"] == 2.225) & (result_df["longitude"] == 2.0)
        ].to_dict(orient="records")[0][INTENSITY_COL_NAME]
        resulting_fourth_intensity = result_df[
            (result_df["latitude"] == 3.0) & (result_df["longitude"] == 3.925)
        ].to_dict(orient="records")[0][INTENSITY_COL_NAME]

        # Assertions to check if the functionality works as expected
        self.assertEqual(resulting_first_intensity, PURPLE)
        self.assertEqual(resulting_second_intensity, RED)
        self.assertEqual(resulting_third_intensity, YELLOW)
        self.assertEqual(resulting_fourth_intensity, GRAY)

    # @unittest.skip("Skipping test_compute_peak_timing")
    def test_compute_peak_timing(self):
        BLACK_BORDER = GLOFAS_FLOOD_PEAK_TIMINGS["black_border"]
        GRAYED_COLOR = GLOFAS_FLOOD_PEAK_TIMINGS["grayed_color"]
        GRAY_BORDER = GLOFAS_FLOOD_PEAK_TIMINGS["gray_border"]
        PEAK_TIMING_COL_NAME = "peak_timing"

        SCHEMA = [
            "latitude",
            "longitude",
            "control_dis",
            "control_time",
            "control_valid_time",
            "issued_on",
            "valid_for",
            "step",
            "p_above_2y",
            "p_above_5y",
            "p_above_20y",
            "min_dis",
            "q1_dis",
            "median_dis",
            "q3_dis",
            "max_dis",
        ]

        data_black_border = [
            # Day 1 has high severity with p_above_20y = 0.33
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.5,
                0.4,
                0.33,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            # Day 2 has the highest severity with p_above_20y = 0.31 and the largest median discharge = 14.0
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.50,
                0.45,
                0.31,
                12.0,
                13.0,
                14.0,
                15.0,
                16.0,
            ),
            # Days 3-30 have lower severity than Day 2 (p_above_20y < 0.30)
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                1.0,
                1.0,
                0.29,
                8.0,
                9.0,
                10.0,
                11.0,
                12.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-05",
                4,
                1.0,
                0.3,
                0.22,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-06",
                5,
                1.0,
                0.9,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-07",
                6,
                1.0,
                0.8,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-08",
                7,
                1.0,
                0.4,
                0.14,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-09",
                8,
                1.0,
                0.67,
                0.27,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-10",
                9,
                1.0,
                0.21,
                0.21,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-11",
                10,
                1.0,
                0.32,
                0.21,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-12",
                11,
                1.0,
                0.45,
                0.11,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-13",
                12,
                1.0,
                0.55,
                0.25,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-14",
                13,
                1.0,
                1.0,
                0.22,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-15",
                14,
                1.0,
                1.0,
                0.29,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-16",
                15,
                1.0,
                0.99,
                0.21,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-17",
                16,
                1.0,
                0.98,
                0.14,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-18",
                17,
                1.0,
                0.4,
                0.23,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-19",
                18,
                1.0,
                0.5,
                0.02,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-20",
                19,
                1.0,
                0.42,
                0.28,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-21",
                20,
                1.0,
                0.15,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-22",
                21,
                1.0,
                0.84,
                0.20,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-23",
                22,
                1.0,
                0.29,
                0.1,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-24",
                23,
                1.0,
                0.027,
                0.22,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-25",
                24,
                1.0,
                0.13,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-26",
                25,
                1.0,
                0.88,
                0.25,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-27",
                26,
                1.0,
                0.25,
                0.16,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-28",
                27,
                1.0,
                0.83,
                0.26,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-29",
                28,
                1.0,
                0.92,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-30",
                29,
                1.0,
                0.76,
                0.21,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                2.275,
                2.0,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-31",
                30,
                1.0,
                0.1,
                0.01,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
        ]

        data_grayed_color_1 = [
            # Days 1-10 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.20,
                0.2,
                0.10,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.0,
                0.2,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.21,
                0.27,
                0.29,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-05",
                4,
                0.29,
                0.01,
                0.27,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-06",
                5,
                0.0,
                0.2,
                0.18,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-07",
                6,
                0.10,
                0.11,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-08",
                7,
                0.11,
                0.16,
                0.0,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-09",
                8,
                0.19,
                0.25,
                0.0,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-10",
                9,
                0.01,
                0.0,
                0.01,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-11",
                10,
                0.23,
                0.1,
                0.05,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            # Day 11 has the highest severity with p_above_5y = 0.30, and it's > 10 days into the forecast
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-12",
                11,
                0.31,
                0.30,
                0.29,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            # Remaining days have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-13",
                12,
                0.29,
                0.29,
                0.10,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-14",
                13,
                0.20,
                0.28,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-15",
                14,
                0.21,
                0.22,
                0.28,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-16",
                15,
                0.0,
                0.1,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-17",
                16,
                0.03,
                0.0,
                0.03,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-18",
                17,
                0.03,
                0.24,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-19",
                18,
                0.1,
                0.23,
                0.27,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-20",
                19,
                0.2,
                0.22,
                0.01,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-21",
                20,
                0.21,
                0.12,
                0.06,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-22",
                21,
                0.29,
                0.16,
                0.18,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-23",
                22,
                0.12,
                0.19,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-24",
                23,
                0.15,
                0.07,
                0.03,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-25",
                24,
                0.19,
                0.17,
                0.12,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-26",
                25,
                0.05,
                0.06,
                0.28,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-27",
                26,
                0.04,
                0.14,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-28",
                27,
                0.0,
                0.27,
                0.16,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-29",
                28,
                0.1,
                0.22,
                0.11,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-30",
                29,
                0.2,
                0.21,
                0.29,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                0.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-31",
                30,
                0.24,
                0.20,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
        ]

        data_grayed_color_2 = [
            # Days 1-10 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.20,
                0.2,
                0.10,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.0,
                0.2,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.21,
                0.27,
                0.29,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-05",
                4,
                0.29,
                0.01,
                0.27,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-06",
                5,
                0.0,
                0.2,
                0.18,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-07",
                6,
                0.10,
                0.11,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-08",
                7,
                0.11,
                0.16,
                0.0,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-09",
                8,
                0.19,
                0.25,
                0.0,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-10",
                9,
                0.01,
                0.0,
                0.01,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-11",
                10,
                0.23,
                0.1,
                0.05,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            # Days 11-25 have p_above_5y sometimes above 0.30, and p_above_20y < 0.30
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-12",
                11,
                0.29,
                0.24,
                0.22,
                17.0,
                18.0,
                23.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-13",
                12,
                0.30,
                0.29,
                0.10,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-14",
                13,
                0.29,
                0.28,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-15",
                14,
                0.27,
                0.22,
                0.28,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-16",
                15,
                0.2,
                0.1,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-17",
                16,
                0.3,
                0.2,
                0.03,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-18",
                17,
                0.53,
                0.24,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-19",
                18,
                0.5,
                0.23,
                0.27,
                17.0,
                18.0,
                19.9,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-20",
                19,
                0.37,
                0.33,
                0.01,
                17.0,
                18.0,
                19.2,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-21",
                20,
                1.0,
                0.9,
                0.06,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-22",
                21,
                1.0,
                1.0,
                0.18,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-23",
                22,
                0.62,
                0.12,
                0.19,
                17.0,
                18.0,
                40.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-24",
                23,
                0.75,
                0.15,
                0.03,
                17.0,
                18.0,
                100.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-25",
                24,
                1.0,
                1.0,
                0.12,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-26",
                25,
                0.8,
                0.3,
                0.28,
                17.0,
                18.0,
                19.4,
                20.0,
                21.0,
            ),
            # Day 26 has the highest severity with p_above_5y > 0.3 and the largest median discharge = 19.5
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-27",
                26,
                0.64,
                0.34,
                0.04,
                17.0,
                18.0,
                19.5,
                20.0,
                21.0,
            ),
            # Days 27-30 have p_above_5y sometimes above 0.30, and p_above_20y < 0.30
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-28",
                27,
                0.95,
                0.45,
                0.16,
                17.0,
                18.0,
                19.3,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-29",
                28,
                1.0,
                0.52,
                0.11,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-30",
                29,
                1.0,
                0.2,
                0.29,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                5.0,
                0.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-31",
                30,
                0.29,
                0.24,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
        ]

        data_grayed_color_3 = [
            # Days 1-10 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.20,
                0.2,
                0.10,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.0,
                0.2,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.21,
                0.27,
                0.29,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-05",
                4,
                0.29,
                0.01,
                0.27,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-06",
                5,
                0.0,
                0.2,
                0.18,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-07",
                6,
                0.10,
                0.11,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-08",
                7,
                0.11,
                0.16,
                0.0,
                9.0,
                10.0,
                110000.0,
                120000.0,
                130000.0,
            ),  # big median discharge
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-09",
                8,
                0.19,
                0.25,
                0.0,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-10",
                9,
                0.01,
                0.0,
                0.01,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-11",
                10,
                0.23,
                0.1,
                0.05,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            # Days 11-13 have p_above_2y sometimes above 0.30, p_above_5y < 0.30 and p_above_20y < 0.30
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-12",
                11,
                0.29,
                0.24,
                0.22,
                17.0,
                18.0,
                23.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-13",
                12,
                0.30,
                0.29,
                0.10,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-14",
                13,
                0.29,
                0.28,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            # Day 14 has the highest severity with p_above_2y > 0.3 and the largest median discharge = 19.6
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-15",
                14,
                0.32,
                0.22,
                0.28,
                17.0,
                18.0,
                19.6,
                20.0,
                21.0,
            ),
            # Days 15-30 have p_above_2y sometimes above 0.30, p_above_5y < 0.30 and p_above_20y < 0.30
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-16",
                15,
                0.2,
                0.1,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-17",
                16,
                0.3,
                0.2,
                0.03,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-18",
                17,
                0.53,
                0.24,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-19",
                18,
                0.5,
                0.23,
                0.27,
                17.0,
                18.0,
                19.2,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-20",
                19,
                0.37,
                0.13,
                0.01,
                17.0,
                18.0,
                19.2,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-21",
                20,
                1.0,
                0.14,
                0.06,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-22",
                21,
                1.0,
                0.22,
                0.18,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-23",
                22,
                0.62,
                0.12,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-24",
                23,
                0.15,
                0.15,
                0.03,
                17.0,
                18.0,
                99.0,
                100.0,
                101.0,
            ),  # big median discharge
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-25",
                24,
                1.0,
                0.2,
                0.12,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-26",
                25,
                0.8,
                0.29,
                0.28,
                17.0,
                18.0,
                19.4,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-27",
                26,
                0.64,
                0.14,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-28",
                27,
                0.95,
                0.25,
                0.16,
                17.0,
                18.0,
                19.3,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-29",
                28,
                1.0,
                0.22,
                0.11,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-30",
                29,
                1.0,
                0.2,
                0.29,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                3.0,
                2.975,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-31",
                30,
                0.29,
                0.24,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
        ]

        data_grayed_color_4 = [
            # Days 1-10 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.20,
                0.2,
                0.10,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.0,
                0.2,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.21,
                0.27,
                0.29,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-05",
                4,
                0.29,
                0.01,
                0.27,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-06",
                5,
                0.0,
                0.2,
                0.18,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-07",
                6,
                0.10,
                0.11,
                0.11,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-08",
                7,
                0.11,
                0.16,
                0.0,
                9.0,
                10.0,
                12.0,
                13.0,
                14.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-09",
                8,
                0.19,
                0.25,
                0.0,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-10",
                9,
                0.01,
                0.0,
                0.01,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-11",
                10,
                0.23,
                0.1,
                0.05,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            # Days 11-29 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-12",
                11,
                0.29,
                0.24,
                0.22,
                17.0,
                18.0,
                19.0,
                24.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-13",
                12,
                0.29,
                0.29,
                0.10,
                17.0,
                18.0,
                19.0,
                25.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-14",
                13,
                0.29,
                0.28,
                0.19,
                17.0,
                18.0,
                19.0,
                303.0,
                405.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-15",
                14,
                0.23,
                0.22,
                0.28,
                17.0,
                18.0,
                19.6,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-16",
                15,
                0.2,
                0.1,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-17",
                16,
                0.29,
                0.2,
                0.03,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-18",
                17,
                0.28,
                0.24,
                0.0,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-19",
                18,
                0.29,
                0.23,
                0.27,
                17.0,
                18.0,
                19.2,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-20",
                19,
                0.22,
                0.13,
                0.01,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-21",
                20,
                0.2,
                0.14,
                0.06,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-22",
                21,
                0.24,
                0.22,
                0.18,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-23",
                22,
                0.2,
                0.12,
                0.19,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-24",
                23,
                0.17,
                0.15,
                0.03,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-25",
                24,
                0.23,
                0.2,
                0.12,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-26",
                25,
                0.29,
                0.29,
                0.28,
                17.0,
                18.0,
                19.4,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-27",
                26,
                0.26,
                0.14,
                0.04,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-28",
                27,
                0.29,
                0.25,
                0.16,
                17.0,
                18.0,
                19.3,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-29",
                28,
                0.23,
                0.22,
                0.11,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-30",
                29,
                0.27,
                0.2,
                0.29,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            # Day 30 has p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30 but the largest median discharge = 19.9
            (
                8.275,
                2.325,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-31",
                30,
                0.24,
                0.24,
                0.04,
                17.0,
                18.0,
                19.9,
                20.0,
                21.0,
            ),
        ]

        data_gray_border = [
            # Day 1 has p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-02",
                1,
                0.22,
                0.20,
                0.10,
                9.0,
                10.0,
                11.0,
                12.0,
                13.0,
            ),
            # Day 2 has p_above_2y > 0.30 (ensuring some severity in the first 10 days) but not exceeding the severity on Day 7
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-03",
                2,
                0.71,
                0.5,
                0.45,
                9.1,
                10.1,
                11.1,
                12.1,
                13.1,
            ),
            # Days 3-6 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-04",
                3,
                0.29,
                0.1,
                0.06,
                9.1,
                10.1,
                11.1,
                12.1,
                13.1,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-05",
                4,
                0.0,
                0.2,
                0.19,
                9.1,
                10.1,
                11.1,
                12.1,
                13.1,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-06",
                5,
                0.25,
                0.23,
                0.21,
                9.1,
                10.1,
                11.1,
                12.1,
                13.1,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-07",
                6,
                0.21,
                0.20,
                0.19,
                9.1,
                10.1,
                11.1,
                12.1,
                13.1,
            ),
            # Day 7 has the highest severity with p_above_20y = 0.46
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-08",
                7,
                0.76,
                0.53,
                0.46,
                12.0,
                13.0,
                14.0,
                15.0,
                16.0,
            ),
            # Days 8-10 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-09",
                8,
                0.2,
                0.1,
                0.0,
                8.0,
                9.0,
                10.0,
                11.0,
                12.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-10",
                9,
                0.29,
                0.16,
                0.08,
                7.0,
                8.0,
                9.0,
                10.0,
                11.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-11",
                10,
                0.21,
                0.12,
                0.1,
                6.0,
                7.0,
                8.0,
                9.0,
                10.0,
            ),
            # Days 11-30 have p_above_2y < 0.30, p_above_5y < 0.30, and p_above_20y < 0.30
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-12",
                11,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-13",
                12,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-14",
                13,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-15",
                14,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-16",
                15,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-17",
                16,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-18",
                17,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-19",
                18,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-20",
                19,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-21",
                20,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-22",
                21,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-23",
                22,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-24",
                23,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-25",
                24,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-26",
                25,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-27",
                26,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-28",
                27,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-29",
                28,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-30",
                29,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
            (
                1.475,
                1.025,
                10.0,
                "2023-10-01",
                "2023-10-02",
                "2023-10-02",
                "2023-10-31",
                30,
                0.25,
                0.20,
                0.05,
                17.0,
                18.0,
                19.0,
                20.0,
                21.0,
            ),
        ]

        data = (
            data_black_border
            + data_grayed_color_1
            + data_grayed_color_2
            + data_grayed_color_3
            + data_grayed_color_4
            + data_gray_border
        )

        # Create DataFrame using the synthetic data
        data_as_dict = lists_to_dict(data_schema=SCHEMA, data=data)
        df = dd.from_dict(data_as_dict, npartitions=1)

        # Compute peak timing
        result_df = compute_flood_peak_timing(
            detailed_forecast_df=df,
            peak_timings=GLOFAS_FLOOD_PEAK_TIMINGS,
            col_name=PEAK_TIMING_COL_NAME,
        ).compute()

        # Get the peak values for the synthetic data
        resulting_first_peak = result_df[
            (result_df["latitude"] == 2.275) & (result_df["longitude"] == 2.0)
        ].to_dict(orient="records")[0]
        resulting_second_peak = result_df[
            (result_df["latitude"] == 0.0) & (result_df["longitude"] == 0.975)
        ].to_dict(orient="records")[0]
        resulting_third_peak = result_df[
            (result_df["latitude"] == 1.475) & (result_df["longitude"] == 1.025)
        ].to_dict(orient="records")[0]
        resulting_fourth_peak = result_df[
            (result_df["latitude"] == 5.0) & (result_df["longitude"] == 0.975)
        ].to_dict(orient="records")[0]
        resulting_fifth_peak = result_df[
            (result_df["latitude"] == 3.0) & (result_df["longitude"] == 2.975)
        ].to_dict(orient="records")[0]
        resulting_sixth_peak = result_df[
            (result_df["latitude"] == 8.275) & (result_df["longitude"] == 2.325)
        ].to_dict(orient="records")[0]

        # Get the peak timings for the synthetic data
        resulting_first_timing = resulting_first_peak[PEAK_TIMING_COL_NAME]
        resulting_second_timing = resulting_second_peak[PEAK_TIMING_COL_NAME]
        resulting_third_timing = resulting_third_peak[PEAK_TIMING_COL_NAME]
        resulting_fourth_timing = resulting_fourth_peak[PEAK_TIMING_COL_NAME]
        resulting_fifth_timing = resulting_fifth_peak[PEAK_TIMING_COL_NAME]
        resulting_sixth_timing = resulting_sixth_peak[PEAK_TIMING_COL_NAME]

        # Assertions to check if the functionality works as expected
        self.assertEqual(resulting_first_timing, BLACK_BORDER)
        self.assertEqual(resulting_second_timing, GRAYED_COLOR)
        self.assertEqual(resulting_third_timing, GRAY_BORDER)
        self.assertEqual(resulting_fourth_timing, GRAYED_COLOR)
        self.assertEqual(resulting_fifth_timing, GRAYED_COLOR)
        self.assertEqual(resulting_sixth_timing, GRAYED_COLOR)

        # Get the peak step for the synthetic data
        resulting_first_step = resulting_first_peak["peak_step"]
        resulting_second_step = resulting_second_peak["peak_step"]
        resulting_third_step = resulting_third_peak["peak_step"]
        resulting_fourth_step = resulting_fourth_peak["peak_step"]
        resulting_fifth_step = resulting_fifth_peak["peak_step"]
        resulting_sixth_step = resulting_sixth_peak["peak_step"]

        # Assertions to check if the functionality works as expected
        self.assertEqual(resulting_first_step, 2)
        self.assertEqual(resulting_second_step, 11)
        self.assertEqual(resulting_third_step, 7)
        self.assertEqual(resulting_fourth_step, 26)
        self.assertEqual(resulting_fifth_step, 14)
        self.assertEqual(resulting_sixth_step, 30)

        # Get the day corresponding to the peak for the synthetic data
        resulting_first_day = resulting_first_peak["peak_day"]
        resulting_second_day = resulting_second_peak["peak_day"]
        resulting_third_day = resulting_third_peak["peak_day"]
        resulting_fourth_day = resulting_fourth_peak["peak_day"]
        resulting_fifth_day = resulting_fifth_peak["peak_day"]
        resulting_sixth_day = resulting_sixth_peak["peak_day"]

        # Parse the string into a datetime object
        resulting_first_day = datetime.strptime(resulting_first_day, "%Y-%m-%d").date()
        resulting_second_day = datetime.strptime(
            resulting_second_day, "%Y-%m-%d"
        ).date()
        resulting_third_day = datetime.strptime(resulting_third_day, "%Y-%m-%d").date()
        resulting_fourth_day = datetime.strptime(
            resulting_fourth_day, "%Y-%m-%d"
        ).date()
        resulting_fifth_day = datetime.strptime(resulting_fifth_day, "%Y-%m-%d").date()
        resulting_sixth_day = datetime.strptime(resulting_sixth_day, "%Y-%m-%d").date()

        # Assertions to check if the functionality works as expected
        self.assertEqual(resulting_first_day, date(2023, 10, 3))
        self.assertEqual(resulting_second_day, date(2023, 10, 12))
        self.assertEqual(resulting_third_day, date(2023, 10, 8))
        self.assertEqual(resulting_fourth_day, date(2023, 10, 27))
        self.assertEqual(resulting_fifth_day, date(2023, 10, 15))
        self.assertEqual(resulting_sixth_day, date(2023, 10, 31))

    # @unittest.skip("Skipping test_compute_flood_threshold_percentages")
    def test_compute_flood_threshold_percentages(self):
        FORECAST_SCHEMA = [
            "number",
            "latitude",
            "longitude",
            "issued_on",
            "step",
            "valid_for",
            "dis24",
        ]

        THRESHOLD_SCHEMA = [
            "latitude",
            "longitude",
            "threshold_2y",
            "threshold_5y",
            "threshold_20y",
        ]

        OUTPUT_SCHEMA = [
            "latitude",
            "longitude",
            "issued_on",
            "valid_for",
            "step",
            "p_above_2y",
            "p_above_5y",
            "p_above_20y",
            "min_dis",
            "q1_dis",
            "median_dis",
            "q3_dis",
            "max_dis",
        ]

        # Create mock forecast dataframe
        forecast_data = [
            # Ensemble 1
            (1, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 100.0),
            (2, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 50.0),
            (3, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 25.0),
            (4, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 75.0),
            (5, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 15.0),
            (6, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 105.0),
            (7, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 35.0),
            (8, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 65.0),
            (9, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 90.0),
            (10, 0.5, 0.5, "2023-10-01 00:00:00", 1, "2023-10-01 00:00:00", 120.0),
            # Ensemble 2
            (1, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 11.0),
            (2, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 9.0),
            (3, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 22.0),
            (4, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 22.0),
            (5, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 14.0),
            (6, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 15.0),
            (7, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 13.0),
            (8, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 7.0),
            (9, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 8.0),
            (10, 2.5, 0.5, "2023-10-05 00:00:00", 17, "2023-10-21 00:00:00", 5.0),
            # Ensemble 3 (odd number of values)
            (1, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 11.0),
            (2, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 9.0),
            (3, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 22.0),
            (4, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 22.0),
            (5, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 14.0),
            (6, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 15.0),
            (7, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 13.0),
            (8, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 7.0),
            (9, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 8.0),
            (10, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 5.0),
            (11, 5.5, 1.5, "2023-10-01 00:00:00", 9, "2023-10-09 00:00:00", 6.0),
        ]

        # Create DataFrame using the synthetic data
        forecast_data_as_dict = lists_to_dict(
            data_schema=FORECAST_SCHEMA, data=forecast_data
        )
        forecast_df = dd.from_dict(forecast_data_as_dict, npartitions=1)

        # Create mock threshold dataframe
        threshold_data = [
            (0.5, 0.5, 20.0, 50.0, 120.0),
            (2.5, 0.5, 9.0, 11.0, 15.0),
            (5.5, 1.5, 10.0, 13.0, 16.0),
        ]

        # Create DataFrame using the synthetic data
        threshold_data_as_dict = lists_to_dict(
            data_schema=THRESHOLD_SCHEMA, data=threshold_data
        )
        threshold_df = dd.from_dict(threshold_data_as_dict, npartitions=1)

        result_df_exact = compute_flood_threshold_percentages(
            forecast_df=forecast_df,
            threshold_df=threshold_df,
            ret_period_vals=GLOFAS_RET_PRD_THRESH_VALS,
        ).compute()

        expected_data_exact = [
            (
                0.5,
                0.5,
                "2023-10-01 00:00:00",
                "2023-10-01 00:00:00",
                1,
                0.9,
                0.7,
                0.1,
                15.0,
                38.75,
                70.0,
                97.5,
                120.0,
            ),
            (
                2.5,
                0.5,
                "2023-10-05 00:00:00",
                "2023-10-21 00:00:00",
                17,
                0.7,
                0.6,
                0.3,
                5.0,
                8.25,
                12.0,
                14.75,
                22.0,
            ),
            (
                5.5,
                1.5,
                "2023-10-01 00:00:00",
                "2023-10-09 00:00:00",
                9,
                6 / 11,
                5 / 11,
                2 / 11,
                5.0,
                7.5,
                11.0,
                14.5,
                22.0,
            ),
        ]
        expected_data_exact_as_dict = lists_to_dict(
            data_schema=OUTPUT_SCHEMA, data=expected_data_exact
        )
        expected_df_exact = dd.from_dict(
            expected_data_exact_as_dict, npartitions=1
        ).compute()

        # Assert that the resulting dataframe matches the expected dataframe.
        # Sort result by latitude and longitude as the order of the rows is not guaranteed.
        self.assertEqual(
            result_df_exact.sort_values(["latitude", "longitude"]).to_dict(
                orient="records"
            ),
            expected_df_exact.to_dict(orient="records"),
        )

    # @unittest.skip("Skipping test_add_geometry")
    def test_add_geometry(self):
        SCHEMA = [
            "latitude",
            "longitude",
            "threshold_2y",
            "threshold_5y",
            "threshold_20y",
        ]

        # Create synthetic data for testing
        data = [
            (16.975, -17.975, 20.0, 21.0, 22.0),
            (2.225, 2.475, 30.0, 32.0, 39.0),
            (-0.525, 3.925, 35.0, 39.0, 44.0),
        ]

        # Create DataFrame using the synthetic data
        data_as_dict = lists_to_dict(data_schema=SCHEMA, data=data)
        df = dd.from_dict(data_as_dict, npartitions=1)

        # Add geometry to the DataFrame
        result_df = add_geometry(
            df=df, half_grid_size=GLOFAS_RESOLUTION / 2, precision=GLOFAS_PRECISION
        ).compute()

        # Get the geometry for the synthetic data
        resulting_first_geometry = result_df[
            (result_df["latitude"] == 16.975) & (result_df["longitude"] == -17.975)
        ].to_dict(orient="records")[0]
        resulting_second_geometry = result_df[
            (result_df["latitude"] == 2.225) & (result_df["longitude"] == 2.475)
        ].to_dict(orient="records")[0]
        resulting_third_geometry = result_df[
            (result_df["latitude"] == -0.525) & (result_df["longitude"] == 3.925)
        ].to_dict(orient="records")[0]

        # Assertions to check if the functionality works as expected
        self.assertEqual(
            resulting_first_geometry["wkt"],
            "POLYGON ((-18.0 16.95,-18.0 17.0,-17.95 17.0,-17.95 16.95,-18.0 16.95))",
        )
        self.assertEqual(
            resulting_second_geometry["wkt"],
            "POLYGON ((2.45 2.2,2.45 2.25,2.5 2.25,2.5 2.2,2.45 2.2))",
        )
        self.assertEqual(
            resulting_third_geometry["wkt"],
            "POLYGON ((3.9 -0.55,3.9 -0.5,3.95 -0.5,3.95 -0.55,3.9 -0.55))",
        )


if __name__ == "__main__":
    unittest.main()
